[GLOBAL]
pants_version = "2.19.0"
ignore_warnings = [
  '$regex$DEPRECATED',
]
pythonpath = ["%(buildroot)s/pants-plugins"]

backend_packages = [
  "pants.backend.shell",
  "pants.backend.python",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.flake8",
  "pants.backend.python.lint.docformatter",
  "pants.backend.python.lint.isort",
  "pants.backend.python.typecheck.mypy",
  "pants.backend.experimental.visibility",
  # plugins
  "pants.backend.plugin_development",
  "internal_plugins.project_version",
]

plugins = ["packaging==21.3"]

# plugin options
[project-version]
as_json = true
match_git = false

[python]
enable_resolves = true
interpreter_constraints = ["CPython>=3.9,<3.10"]

[python.resolves]
pants-plugins = "pants-plugins/requirements-pants-plugins.lock"
python-default = "requirements/requirements.lock"
devtools = "requirements/devtools.lock"
testtools = "requirements/testtools.lock"

[python.resolves_to_interpreter_constraints]
# must use '<3.10' because Pants doesn't publish Python wheels for 3.10
# using '<=3.10' will make './pants generate-lockfiles --resolve=pants-plugins` fail
pants-plugins = ["CPython>=3.9,<3.10"]

[python-bootstrap]
# https://www.pantsbuild.org/docs/python-interpreter-compatibility#changing-the-interpreter-search-path
search_path = ["<PYENV_LOCAL>", "<PATH>"]

[anonymous-telemetry]
enabled = true
repo_id = "df6470e5-420b-4930-b6e6-638cc06ffe0b"

[source]
# https://www.pantsbuild.org/docs/source-roots#no-source-root
root_patterns = [
    "/", "/pants-plugins"
]

[mypy]
install_from_resolve = "devtools"
requirements = [
    "//requirements:requirements-dev#mypy",
    "types-requests",
    "types-python-dateutil",
    "types-setuptools",
]

[black]
install_from_resolve = "devtools"
requirements = ["//requirements:requirements-dev#black"]

[docformatter]
install_from_resolve = "devtools"
requirements = ["//requirements:requirements-dev#docformatter"]

[isort]
install_from_resolve = "devtools"

[pytest]
# https://www.pantsbuild.org/docs/reference-pytest#section-extra-requirements
install_from_resolve = "testtools"
requirements = [
    "//requirements:requirements-test#pytest",
    "//requirements:requirements-test#pytest-vcr",
]
args = ["-v", "--vcr-record=none"]

[tailor]
ignore_paths = ["requirements/BUILD"]

[pex]
verbosity = 9
